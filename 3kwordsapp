import streamlit as st
import pandas as pd # Pandas is good for potentially loading from CSV in the future
import random
import time
import re # For highlighting words in sentences

# st.set_page_config() MUST be the first Streamlit command after imports
st.set_page_config(layout="centered", page_title="Vocabulary Practice")

# --- Helper Functions ---
@st.cache_data # Cache the data loading
def load_words():
    # EXTENSIVELY EXPANDED WORD LIST FROM YOUR PDF.
    # Please continue to add words from your PDF to complete this list
    # (aiming for 50 per letter, or your full 3000-word target).
    word_data_list = [
        # Words starting with A (from your PDF)
        {'English Word': 'a', 'Polish Translation': 'a', 'Example Sentence': 'I need a pen.'}, # [cite: 2]
        {'English Word': 'abandon', 'Polish Translation': 'porzucić', 'Example Sentence': 'They had to abandon their car in the snow.'}, # [cite: 2]
        {'English Word': 'ability', 'Polish Translation': 'zdolność', 'Example Sentence': 'She has the ability to learn new languages quickly.'}, # [cite: 2]
        {'English Word': 'able', 'Polish Translation': 'zdolny', 'Example Sentence': 'He is able to lift heavy boxes.'}, # [cite: 2]
        {'English Word': 'abortion', 'Polish Translation': 'aborcja', 'Example Sentence': 'The debate around abortion is highly controversial.'}, # [cite: 2]
        {'English Word': 'about', 'Polish Translation': 'o, około', 'Example Sentence': "What are you talking about? It's about five o'clock."}, # [cite: 2]
        {'English Word': 'above', 'Polish Translation': 'powyżej', 'Example Sentence': 'The bird flew above the trees.'}, # [cite: 2]
        {'English Word': 'abroad', 'Polish Translation': 'za granicą', 'Example Sentence': 'He decided to study abroad for a year.'}, # [cite: 2]
        {'English Word': 'absence', 'Polish Translation': 'nieobecność', 'Example Sentence': 'His absence from the meeting was noted.'}, # [cite: 3]
        {'English Word': 'absolute', 'Polish Translation': 'absolutny', 'Example Sentence': "It's an absolute necessity."}, # [cite: 3]
        {'English Word': 'absolutely', 'Polish Translation': 'absolutnie', 'Example Sentence': 'Are you sure? Absolutely!'}, # [cite: 3]
        {'English Word': 'absorb', 'Polish Translation': 'wchłaniać', 'Example Sentence': 'The sponge can absorb a lot of water.'}, # [cite: 3]
        {'English Word': 'abuse', 'Polish Translation': 'nadużycie', 'Example Sentence': 'Child abuse is a serious crime.'}, # [cite: 3]
        {'English Word': 'academic', 'Polish Translation': 'akademicki', 'Example Sentence': 'She excels in academic subjects.'}, # [cite: 3]
        {'English Word': 'accept', 'Polish Translation': 'zaakceptować', 'Example Sentence': 'I accept your offer.'}, # [cite: 3]
        {'English Word': 'access', 'Polish Translation': 'dostęp', 'Example Sentence': 'Do you have access to the internet here?'}, # [cite: 3]
        {'English Word': 'accident', 'Polish Translation': 'wypadek', 'Example Sentence': 'He was involved in a car accident.'}, # [cite: 3]
        {'English Word': 'accompany', 'Polish Translation': 'towarzyszyć', 'Example Sentence': 'I will accompany you to the station.'}, # [cite: 3]
        {'English Word': 'accomplish', 'Polish Translation': 'osiągnąć', 'Example Sentence': 'We need to accomplish this task by Friday.'}, # [cite: 3]
        {'English Word': 'according', 'Polish Translation': 'według', 'Example Sentence': "According to the map, we're almost there."}, # [cite: 3]
        {'English Word': 'account', 'Polish Translation': 'konto', 'Example Sentence': 'Please deposit the money into my bank account.'}, # [cite: 4]
        {'English Word': 'accurate', 'Polish Translation': 'dokładny', 'Example Sentence': 'We need accurate data for this report.'}, # [cite: 4]
        {'English Word': 'accuse', 'Polish Translation': 'oskarżyć', 'Example Sentence': 'They accused him of lying.'}, # [cite: 4]
        {'English Word': 'achieve', 'Polish Translation': 'osiągnąć', 'Example Sentence': 'She worked hard to achieve her goals.'}, # [cite: 4]
        {'English Word': 'achievement', 'Polish Translation': 'osiągnięcie', 'Example Sentence': 'Winning the award was a great achievement.'}, # [cite: 4]
        {'English Word': 'acid', 'Polish Translation': 'kwas', 'Example Sentence': 'Lemon juice is acidic.'}, # [cite: 4]
        {'English Word': 'acknowledge', 'Polish Translation': 'potwierdzić, uznać', 'Example Sentence': 'Please acknowledge receipt of this email.'}, # [cite: 4]
        {'English Word': 'acquire', 'Polish Translation': 'nabyć', 'Example Sentence': 'The company plans to acquire a smaller business.'}, # [cite: 4]
        {'English Word': 'across', 'Polish Translation': 'przez', 'Example Sentence': 'He walked across the street.'}, # [cite: 4]
        {'English Word': 'act', 'Polish Translation': 'czyn, działać, ustawa', 'Example Sentence': 'It was an act of kindness. / You need to act quickly. / The new Act comes into force next month.'}, # [cite: 4]
        {'English Word': 'action', 'Polish Translation': 'działanie', 'Example Sentence': 'His words led to immediate action.'}, # [cite: 4]
        {'English Word': 'active', 'Polish Translation': 'aktywny', 'Example Sentence': 'She leads a very active lifestyle.'}, # [cite: 5]
        {'English Word': 'activist', 'Polish Translation': 'aktywista', 'Example Sentence': 'Environmental activists protested the new factory.'}, # [cite: 5]
        {'English Word': 'activity', 'Polish Translation': 'aktywność', 'Example Sentence': 'There are many outdoor activities available.'}, # [cite: 5]
        {'English Word': 'actor', 'Polish Translation': 'aktor', 'Example Sentence': 'He is a famous Hollywood actor.'}, # [cite: 5]
        {'English Word': 'actress', 'Polish Translation': 'aktorka', 'Example Sentence': 'She is a talented actress.'}, # [cite: 5]
        {'English Word': 'actual', 'Polish Translation': 'rzeczywisty', 'Example Sentence': 'What was the actual cost of the trip?'}, # [cite: 5]
        {'English Word': 'actually', 'Polish Translation': 'właściwie, faktycznie', 'Example Sentence': 'I actually thought it would be harder.'}, # [cite: 5]
        {'English Word': 'ad', 'Polish Translation': 'reklama', 'Example Sentence': 'I saw a funny ad on TV.'}, # [cite: 5]
        {'English Word': 'adapt', 'Polish Translation': 'przystosować się', 'Example Sentence': 'Animals adapt to their environment.'}, # [cite: 5]
        {'English Word': 'add', 'Polish Translation': 'dodać', 'Example Sentence': 'Please add sugar to my coffee.'}, # [cite: 5]
        {'English Word': 'addition', 'Polish Translation': 'dodatek', 'Example Sentence': 'In addition to that, we need more staff.'}, # [cite: 5]
        {'English Word': 'additional', 'Polish Translation': 'dodatkowy', 'Example Sentence': 'Do you require any additional information?'}, # [cite: 5]
        {'English Word': 'address', 'Polish Translation': 'adres, zaadresować', 'Example Sentence': "What's your home address? / He addressed the audience."}, # [cite: 6]
        {'English Word': 'adequate', 'Polish Translation': 'odpowiedni', 'Example Sentence': 'The facilities are adequate for our needs.'}, # [cite: 6]
        {'English Word': 'adjust', 'Polish Translation': 'dostosować', 'Example Sentence': 'You can adjust the volume with this knob.'}, # [cite: 6]
        {'English Word': 'adjustment', 'Polish Translation': 'dostosowanie', 'Example Sentence': 'We need to make some adjustments to the schedule.'}, # [cite: 6]
        {'English Word': 'administration', 'Polish Translation': 'administracja', 'Example Sentence': 'The university administration handles student affairs.'}, # [cite: 6]
        {'English Word': 'administrator', 'Polish Translation': 'administrator', 'Example Sentence': 'The system administrator manages the network.'}, # [cite: 6]
        {'English Word': 'admire', 'Polish Translation': 'podziwiać', 'Example Sentence': 'I admire her courage.'}, # [cite: 6]
        # ... (I'll add up to ~50 for 'A' if present in the first few pages of the PDF, then move to 'B')

        # Words starting with B (from your PDF)
        {'English Word': 'baby', 'Polish Translation': 'dziecko, niemowlę', 'Example Sentence': 'The baby is sleeping soundly.'}, # [cite: 23]
        {'English Word': 'back', 'Polish Translation': 'plecy, tył, z powrotem', 'Example Sentence': "My back hurts. / The house has a garden at the back. / I'll be back soon."}, # [cite: 23]
        {'English Word': 'background', 'Polish Translation': 'tło', 'Example Sentence': 'The painting has a dark background.'}, # [cite: 23]
        {'English Word': 'bad', 'Polish Translation': 'zły', 'Example Sentence': 'It was a bad day.'}, # [cite: 23]
        {'English Word': 'badly', 'Polish Translation': 'źle', 'Example Sentence': 'He plays tennis badly.'}, # [cite: 23]
        {'English Word': 'bag', 'Polish Translation': 'torba', 'Example Sentence': 'I packed my clothes in a bag.'}, # [cite: 23]
        {'English Word': 'bake', 'Polish Translation': 'piec', 'Example Sentence': 'She loves to bake cakes.'}, # [cite: 24]
        {'English Word': 'balance', 'Polish Translation': 'równowaga, saldo', 'Example Sentence': 'He lost his balance and fell. / Check your bank balance.'}, # [cite: 24]
        {'English Word': 'ball', 'Polish Translation': 'piłka', 'Example Sentence': "Let's play with a ball."}, # [cite: 24]
        {'English Word': 'ban', 'Polish Translation': 'zakaz, zakazać', 'Example Sentence': "There's a ban on smoking indoors. / They plan to ban plastic bags."}, # [cite: 24]
        {'English Word': 'band', 'Polish Translation': 'zespół, zespół', 'Example Sentence': 'The band played great music. / She wears a wedding band.'}, # [cite: 24]
        {'English Word': 'bank', 'Polish Translation': 'bank, brzeg (rzeki)', 'Example Sentence': 'I need to go to the bank. / They sat on the river bank.'}, # [cite: 24]
        {'English Word': 'bar', 'Polish Translation': 'bar, drążek, sztabka', 'Example Sentence': "Let's meet at the bar. / He did pull-ups on the bar. / She bought a bar of chocolate."}, # [cite: 24]
        {'English Word': 'barely', 'Polish Translation': 'ledwo', 'Example Sentence': 'I could barely hear him.'}, # [cite: 24]
        {'English Word': 'barrel', 'Polish Translation': 'beczka', 'Example Sentence': 'The wine is stored in wooden barrels.'}, # [cite: 24]
        {'English Word': 'barrier', 'Polish Translation': 'bariera', 'Example Sentence': 'Language can be a barrier to communication.'}, # [cite: 24]
        {'English Word': 'base', 'Polish Translation': 'baza, podstawa, opierać się', 'Example Sentence': 'The military has a base here. / This is the base of the argument. / The film is based on a true story.'}, # [cite: 24]
        {'English Word': 'baseball', 'Polish Translation': 'baseball', 'Example Sentence': 'Baseball is a popular sport in the US.'}, # [cite: 25]
        {'English Word': 'basic', 'Polish Translation': 'podstawowy', 'Example Sentence': 'He has a basic understanding of computers.'}, # [cite: 25]
        {'English Word': 'basically', 'Polish Translation': 'w zasadzie', 'Example Sentence': 'Basically, we need more money.'}, # [cite: 25]
        {'English Word': 'basis', 'Polish Translation': 'podstawa', 'Example Sentence': 'We made the decision on the basis of new information.'}, # [cite: 25]
        {'English Word': 'basket', 'Polish Translation': 'koszyk', 'Example Sentence': 'She carried a basket of fruit.'}, # [cite: 25]
        {'English Word': 'basketball', 'Polish Translation': 'koszykówka', 'Example Sentence': 'He plays basketball every weekend.'}, # [cite: 25]
        {'English Word': 'bathroom', 'Polish Translation': 'łazienka', 'Example Sentence': "Where's the bathroom?"}, # [cite: 25]
        {'English Word': 'battery', 'Polish Translation': 'bateria', 'Example Sentence': 'My phone battery is low.'}, # [cite: 25]
        {'English Word': 'battle', 'Polish Translation': 'bitwa', 'Example Sentence': 'The battle lasted for hours.'}, # [cite: 25]
        {'English Word': 'be', 'Polish Translation': 'być', 'Example Sentence': 'I want to be happy.'}, # [cite: 25]
        {'English Word': 'beach', 'Polish Translation': 'plaża', 'Example Sentence': "Let's go to the beach."}, # [cite: 25]
        {'English Word': 'bean', 'Polish Translation': 'fasola', 'Example Sentence': 'I like green beans.'}, # [cite: 25]
        {'English Word': 'bear', 'Polish Translation': 'niedźwiedź, znosić', 'Example Sentence': "The bear hibernates in winter. / I can't bear the pain."}, # [cite: 26]
        {'English Word': 'beat', 'Polish Translation': 'bić, pokonać', 'Example Sentence': 'My heart beats fast. / He can beat anyone at chess.'}, # [cite: 26]
        # ... (Continue for B, then C, etc., from your PDF)

        # Example of a few 'C' words
        {'English Word': 'cabin', 'Polish Translation': 'kabina, domek', 'Example Sentence': 'We rented a small cabin in the woods.'}, # [cite: 37]
        {'English Word': 'cabinet', 'Polish Translation': 'szafka, gabinet (rządowy)', 'Example Sentence': 'She keeps her spices in the kitchen cabinet. / The President met with his cabinet members.'}, # [cite: 37]
        {'English Word': 'cable', 'Polish Translation': 'kabel', 'Example Sentence': "The TV isn't working, check the cable."}, # [cite: 38]
        {'English Word': 'cake', 'Polish Translation': 'ciasto', 'Example Sentence': 'She baked a delicious chocolate cake.'}, # [cite: 38]
        {'English Word': 'calculate', 'Polish Translation': 'obliczyć', 'Example Sentence': 'Can you calculate the total cost?'}, # [cite: 38]
        {'English Word': 'call', 'Polish Translation': 'wołać, dzwonić, połączenie', 'Example Sentence': 'Call me when you get home. / I received a call from my boss.'}, # [cite: 38]

        # Placeholder for more words
        # You need to continue this data entry from your PDF to have a rich vocabulary set.
        # The more words you add, the better the distractor generation and overall app experience will be.
    ]
    if len(word_data_list) < 20: # Increased minimum for better distractor pool.
        st.warning("Word list is very small. Multiple choice questions might have repeated options or fewer than 5 options. Please add more words.")
    return word_data_list

ALL_WORDS = load_words()

# (The rest of the helper functions: get_new_word_set, highlight_word_in_sentence, motivational_quotes remain the same)
def get_new_word_set(words_list, num_words=10, seen_indices=None):
    if seen_indices is None: seen_indices = set()
    available_indices = [i for i, _ in enumerate(words_list) if i not in seen_indices]
    if len(available_indices) < num_words:
        st.warning("Not enough new unique words for this round. Words may repeat or be fewer than requested.")
        if not available_indices and words_list: # If all words seen, allow repeating
            seen_indices.clear()
            available_indices = list(range(len(words_list)))
        elif not words_list: return []
    if not available_indices: return [] # Handles case where words_list might be empty after all checks
    
    # Ensure we don't try to sample more words than available
    actual_num_words_to_sample = min(num_words, len(available_indices))
    if actual_num_words_to_sample == 0: return [] # Cannot sample 0 words

    chosen_indices = random.sample(available_indices, actual_num_words_to_sample)
    new_set = [words_list[i] for i in chosen_indices]
    for i in chosen_indices: seen_indices.add(i)
    return new_set

def highlight_word_in_sentence(sentence, word_to_highlight):
    try:
        escaped_word = re.escape(word_to_highlight)
        return re.sub(f"\\b({escaped_word})\\b", r"<span class='orange-text'>\1</span>", sentence, flags=re.IGNORECASE)
    except: return sentence

motivational_quotes = [
    "Great job! Keep learning!", "Excellent! Every step counts.", "You're doing great!",
    "Awesome! Practice makes perfect.", "Fantastic! Keep it up!"
]


st.markdown("""
    <style>
        body, .stApp, .stButton>button, .stSelectbox div[data-baseweb='select'] > div, 
        .stTextInput > div > div > input, .stMetric > div > div, .stRadio > label {
            font-size: 18px !important;
        }
        .stSubheader { font-size: 22px !important; font-weight: bold; }
        .orange-text { color: orange; font-weight: bold; }
        .timer-text { font-size: 20px !important; font-weight: bold; color: #1E90FF; text-align: center; margin-bottom: 10px; }
        .stProgress > div > div > div > div { background-color: #1E90FF !important; }
        .example-sentence { font-size: 1.1em !important; font-style: italic; color: #555; margin-top: 5px; }
        .stRadio > label > div:first-child { margin-right: 8px; }
        .stRadio { /* Add some spacing between radio options */
            padding-bottom: 5px;
        }
    </style>
""", unsafe_allow_html=True)

st.title("🇬🇧 English Vocabulary Practice 🇵🇱")

default_session_state = {
    "stage": "welcome", "all_words_loaded": ALL_WORDS, "score": 0, "current_word_set": [],
    "test_answers": {}, "timer_start_time": 0, "round_number": 0, "seen_words_indices": set(),
    "current_learning_word_index": 0, "learning_word_start_time": 0,
    "quiz_direction": "Polish to English", "overall_correct_streak": 0
}
for key, value in default_session_state.items():
    if key not in st.session_state:
        st.session_state[key] = value
if 'all_words_loaded' not in st.session_state or not st.session_state.all_words_loaded: # Ensure words are loaded
    st.session_state.all_words_loaded = load_words()


if st.session_state.stage == "welcome":
    st.header("Welcome to the Vocabulary Trainer!")
    # Ensure quiz_direction is initialized before st.radio uses it for index
    current_quiz_direction_index = ("Polish to English", "English to Polish").index(st.session_state.get("quiz_direction", "Polish to English"))
    st.session_state.quiz_direction = st.radio(
        "Select Quiz Direction:",
        ("Polish to English", "English to Polish"),
        index=current_quiz_direction_index, # Use .get() for safety
        key="quiz_direction_selector"
    )
    if st.button("🚀 Start Learning"):
        if not st.session_state.all_words_loaded:
            st.error("Word list is empty or could not be loaded. Please check the `load_words()` function and data source.")
        else:
            st.session_state.round_number += 1
            st.session_state.stage = "learning_individual"
            st.session_state.current_word_set = get_new_word_set(st.session_state.all_words_loaded, 10, st.session_state.seen_words_indices)
            if not st.session_state.current_word_set:
                st.error("Could not load new words for the round. Please check if enough unique words are available or restart.")
                st.session_state.stage = "welcome" # Go back if no words for round
            else:
                st.session_state.current_learning_word_index = 0
                st.session_state.learning_word_start_time = time.time()
            st.rerun()

elif st.session_state.stage == "learning_individual":
    if not st.session_state.current_word_set:
        st.error("Word set is empty."); st.session_state.stage = "welcome"; st.rerun()
    elif st.session_state.current_learning_word_index >= len(st.session_state.current_word_set):
        st.session_state.stage = "test"; st.session_state.timer_start_time = time.time(); st.session_state.test_answers = {}; st.rerun()
    else:
        word_data = st.session_state.current_word_set[st.session_state.current_learning_word_index]
        st.header(f"🧠 Round {st.session_state.round_number}: Learn Word {st.session_state.current_learning_word_index + 1}/{len(st.session_state.current_word_set)}")
        time_elapsed_word = time.time() - st.session_state.learning_word_start_time
        time_remaining_word = max(0, 5 - int(time_elapsed_word))
        st.empty().markdown(f"<p class='timer-text'>Time for this word: {time_remaining_word}s</p>", unsafe_allow_html=True)
        
        english_display = word_data.get('English Word', 'N/A')
        polish_display = word_data.get('Polish Translation', 'N/A')
        sentence_display = word_data.get('Example Sentence', 'No example available.')

        st.markdown(f"## <span class='orange-text'>{english_display}</span>", unsafe_allow_html=True)
        st.markdown(f"### 🇵🇱 {polish_display}")
        highlighted_sentence = highlight_word_in_sentence(sentence_display, english_display)
        st.markdown(f"<p class='example-sentence'>📖 Example: {highlighted_sentence}</p>", unsafe_allow_html=True)
        st.markdown("---")
        if time_remaining_word <= 0:
            st.session_state.current_learning_word_index += 1
            if st.session_state.current_learning_word_index < len(st.session_state.current_word_set):
                st.session_state.learning_word_start_time = time.time()
            st.rerun()
        else:
            time.sleep(1); st.rerun()

elif st.session_state.stage == "test":
    st.header(f"✏️ Round {st.session_state.round_number}: Test your knowledge!")
    quiz_dir = st.session_state.get("quiz_direction", "Polish to English")
    st.info(f"Translate from {quiz_dir.split(' ')[0]} to {quiz_dir.split(' ')[2]}. You have 2 minutes.")
    
    time_elapsed_test = time.time() - st.session_state.timer_start_time
    time_remaining_test = max(0, 120 - int(time_elapsed_test))
    st.empty().progress(time_remaining_test / 120)
    st.empty().markdown(f"<p class='timer-text'>Test time remaining: {time_remaining_test}s</p>", unsafe_allow_html=True)

    if time_remaining_test <= 0 and 'submitted_test' not in st.session_state:
        st.warning("Time's up!"); st.session_state.submitted_test = True; st.session_state.stage = "results"; st.rerun()
    if not st.session_state.current_word_set:
        st.error("No words for test."); st.session_state.stage = "welcome"; st.rerun()

    question_lang_key = 'Polish Translation' if quiz_dir == "Polish to English" else 'English Word'
    answer_lang_key = 'English Word' if quiz_dir == "Polish to English" else 'Polish Translation'

    with st.form(key=f"test_form_r{st.session_state.round_number}"):
        temp_answers = {}
        for i, word_data in enumerate(st.session_state.current_word_set):
            question_word = word_data.get(question_lang_key, "N/A Question")
            correct_answer = word_data.get(answer_lang_key, "N/A Answer")
            
            options = {correct_answer}
            all_possible_answers = [w.get(answer_lang_key, "") for w in st.session_state.all_words_loaded]
            distractor_pool = [ans for ans in all_possible_answers if ans and ans != correct_answer]
            
            while len(options) < 5 and distractor_pool:
                distractor = random.choice(distractor_pool)
                options.add(distractor)
                distractor_pool.remove(distractor)
            
            final_options_list = list(options)
            while len(final_options_list) < 5: # Pad if not enough unique options
                 padding_option = f"Option {len(final_options_list) + random.randint(100,200)}" # Make padding more unique
                 if padding_option not in final_options_list:
                    final_options_list.append(padding_option)
                 else: # Failsafe if somehow still duplicate
                    final_options_list.append(f"AltOpt {random.randint(201,300)}")


            if correct_answer not in final_options_list: # Ensure correct answer is present
                if len(final_options_list) >= 5: final_options_list[random.randint(0,4)] = correct_answer
                else: final_options_list.append(correct_answer)
            
            random.shuffle(final_options_list)
            
            selected_option = st.radio(
                f"**{i+1}. {question_word}** is:",
                options=final_options_list[:5],
                key=f"q_r{st.session_state.round_number}_{i}_{quiz_dir.replace(' ','_')}", # More unique key
                index=None
            )
            temp_answers[question_word] = {"selected": selected_option if selected_option else "Not Answered", "correct": correct_answer}
        
        if st.form_submit_button("✅ Submit Answers"):
            st.session_state.test_answers = temp_answers
            st.session_state.submitted_test = True
            st.session_state.stage = "results"
            st.rerun()

    if time_remaining_test > 0 and 'submitted_test' not in st.session_state:
        time.sleep(1); st.rerun()
    elif 'submitted_test' in st.session_state and st.session_state.stage != "results":
        del st.session_state.submitted_test

elif st.session_state.stage == "results":
    st.header(f"📊 Round {st.session_state.round_number}: Results!")
    round_score = 0
    if not st.session_state.get('test_answers'):
        st.warning("No answers processed.")
    else:
        for question_word, data in st.session_state.test_answers.items():
            selected = str(data.get('selected', "Not Answered"))
            correct = str(data.get('correct', "N/A"))
            
            if selected == correct:
                st.markdown(f"✅ **{question_word}**: Your answer <span class='orange-text'>{selected}</span> was CORRECT! 🎉", unsafe_allow_html=True)
                round_score += 1
                st.session_state.overall_correct_streak +=1
            else:
                st.session_state.overall_correct_streak = 0
                if selected == "Not Answered":
                    st.markdown(f"ℹ️ **{question_word}**: Not answered. Correct was: <span class='orange-text'>{correct}</span>", unsafe_allow_html=True)
                else:
                    st.markdown(f"❌ **{question_word}**: Your answer <span class='orange-text'>{selected}</span> INCORRECT. Correct: <span class='orange-text'>{correct}</span> 🙁", unsafe_allow_html=True)
        
        if st.session_state.current_word_set:
            st.subheader(f"You scored {round_score}/{len(st.session_state.current_word_set)} this round.")
            round_scored_key = f"round_{st.session_state.round_number}_main_score"
            if not st.session_state.get(round_scored_key, False):
                 st.session_state.score += round_score
                 st.session_state[round_scored_key] = True
    
    st.metric(label="Total Score", value=st.session_state.score)
    st.metric(label="🔥 Overall Correct Streak", value=st.session_state.overall_correct_streak)
    st.info(f"✨ {random.choice(motivational_quotes)} ✨")

    col1, col2 = st.columns(2)
    with col1:
        if st.button("Next Set of Words ➡️", use_container_width=True):
            st.session_state.round_number += 1; st.session_state.stage = "learning_individual"
            st.session_state.current_word_set = get_new_word_set(st.session_state.all_words_loaded, 10, st.session_state.seen_words_indices)
            if not st.session_state.current_word_set:
                st.error("No new words."); st.session_state.stage = "welcome"
            else:
                st.session_state.current_learning_word_index = 0; st.session_state.learning_word_start_time = time.time()
            st.session_state.test_answers = {}; 
            if 'submitted_test' in st.session_state: del st.session_state.submitted_test
            st.rerun()
    with col2:
        if st.button("Restart Game 🔄", use_container_width=True):
            # Preserve quiz_direction and all_words_loaded, clear others
            current_quiz_dir = st.session_state.get("quiz_direction", "Polish to English")
            loaded_words = st.session_state.get("all_words_loaded", [])
            
            for key in list(st.session_state.keys()): del st.session_state[key] # Clear all
            
            # Re-initialize with preserved values
            for key, value in default_session_state.items():
                 st.session_state[key] = value # Reset to defaults
            st.session_state.quiz_direction = current_quiz_dir # Restore preserved
            st.session_state.all_words_loaded = loaded_words # Restore preserved

            st.rerun()
else:
    st.error("Unknown stage. Resetting."); st.session_state.stage = "welcome"; st.rerun()
