import streamlit as st
import pandas as pd, numpy as np, time, random
from sqlalchemy import create_engine

# ——— 1) Load data & DB ———
@st.cache
def load_vocab():
    return pd.read_csv("data/vocab.csv")

vocab = load_vocab()
engine = create_engine("sqlite:///progress.db")   # stores scores

# ——— 2) Initialization ———
if "set_idx" not in st.session_state:
    st.session_state.set_idx  = 0
    st.session_state.score    = 0
    st.session_state.phase    = "intro"   # intro | reading | quiz | review

# ——— 3) Helpers ———
def pick_next_set():
    return vocab.sample(10, replace=False).reset_index(drop=True)

if "current_set" not in st.session_state:
    st.session_state.current_set = pick_next_set()

# ——— 4) Phase: Intro ———
if st.session_state.phase == "intro":
    st.title("🔤 English–Polish Speed-Quiz")
    st.write("Ready to gobble up 10 new words in a minute? Press ▶️ Start.")
    if st.button("▶️ Start reading"):
        st.session_state.phase     = "reading"
        st.session_state.start_time = time.time()
        st.experimental_rerun()

# ——— 5) Phase: Reading ———
elif st.session_state.phase == "reading":
    elapsed = time.time() - st.session_state.start_time
    st.write(f"⏱️ Reading time: {int(60-elapsed)}s left")
    cols = st.columns(2)
    for i, row in st.session_state.current_set.iterrows():
        cols[i % 2].markdown(f"**{row.english}** — {row.polish}")
    st.progress(elapsed/60)
    if elapsed >= 60:
        st.session_state.phase = "quiz"
        st.experimental_rerun()
    else:
        st.experimental_rerun()

# ——— 6) Phase: Quiz ———
elif st.session_state.phase == "quiz":
    st.write("Match each **Polish** word to its **English** buddy.")
    answers = {}
    options = list(st.session_state.current_set.polish)
    for idx, eng in enumerate(st.session_state.current_set.english):
        answers[idx] = st.selectbox(f"{eng} →", [""] + options, key=f"q{idx}")
    if st.button("Submit answers"):
        correct = 0
        for idx, choice in answers.items():
            if choice == st.session_state.current_set.loc[idx, "polish"]:
                correct += 1
        st.session_state.score += correct
        # log progress
        pd.DataFrame({
            "timestamp": [pd.Timestamp.now()],
            "set":       [st.session_state.set_idx],
            "correct":   [correct]
        }).to_sql("progress", engine, if_exists="append", index=False)
        st.session_state.phase = "review"
        st.session_state.correct = correct
        st.experimental_rerun()

# ——— 7) Phase: Review & Next ———
elif st.session_state.phase == "review":
    st.write(f"✅ You got **{st.session_state.correct}/10** this round.")
    st.write(f"🏆 Total score: **{st.session_state.score}**")
    if st.button("Next 10 words"):
        st.session_state.set_idx   += 1
        st.session_state.current_set = pick_next_set()
        st.session_state.phase     = "reading"
        st.session_state.start_time = time.time()
        st.experimental_rerun()
